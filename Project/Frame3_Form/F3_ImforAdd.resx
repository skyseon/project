<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="down_Bt.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAYAAAByDd+UAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDpGNEYxMjgwRDM2QzkxMUU2QjQwNEE1OTgxNjg4QjdDOCIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDpGNEYxMjgwRTM2QzkxMUU2QjQwNEE1OTgxNjg4QjdDOCI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkY0RjEyODBCMzZDOTExRTZCNDA0QTU5ODE2ODhC
        N0M4IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkY0RjEyODBDMzZDOTExRTZCNDA0QTU5ODE2ODhC
        N0M4Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQg
        ZW5kPSJyIj8+MG1nrgAAArdJREFUSEvtVllLMmEYnWv/pkiLRWVEUllEYbRACy3qmBaBVtpKkUa7KZVl
        C91oQv6A6CJ/wPnmPDCmjoofeenFgeGd533Os5wzjJLNZk25XE79/Pz80Z6RyWQainQ6jff395+Hhwf1
        6urKpGiHno+PDySTSdzd3eHl5UWeG4FYLIb7+3s8Pz9DI0MoFFKVt7e3fCqVwubmJpaWlhCJRCTw7Ozs
        TwgGg9jY2MDq6io0Duzv72N2djavPD4+IpFIYH5+Hq2trVhYWJCXJycnuLy8rJisFrQu4PV6mRxOpxMd
        HR3Q1oWtrS2Mjo5C0WaL29tbTE9Pw2w2C3p7e6VbErNjjqNS8mKEw2H4fD4pfGRkBJ2dnYV839/f0rHD
        4fglXF5eRk9PTyGI6Ovrw8rKSoH4+vq6IpHf7xcidtDV1VWSY2ZmBl9fX0I4NDT0S7i9vQ1VVSWARMWX
        +vv74Xa7cXBwIMTRaBR7e3tYW1uTFZCou7u75M7w8LCQaAoFNWIgZLWHh4ciHlZMYo62OMnAwAA8Hg8C
        gQBcLhfGxsYMUxkcHBSxXFxciDpvbm4kt4Hw+Pi4oFASM4A7mZqags1mK0nK6klefGa326Xj8/NzPD09
        SR7mPD09lfwGQla1uLhYYgudmNKenJw0jI3guFkY40mkT4v3dFu8vr4aCefm5qragrvjBe54fHwcbW1t
        aG9vl44oJFpLJ6pmCwNhPbbY2dmR/U5MTEhhNHQ8Hpd39diihLBeW3DMR0dH8rHgp7Bpi6YtmrZo2qJ+
        W/BQR6NsUZyzJqGOv9iiHAVCLl5vuxr+xxaVQPOvr6/LFBRN8nkeUgzlgeWoZYtqINnu7q7Yzmq15hVN
        nR5WTltQCFRjLVD+JKO4aPJKMcXg14sqtlgsXIGqaKozab9vaktLS758Pw0Ec6tms9n0D6rCu+ANxGOB
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="up_Bt.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAYAAAByDd+UAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjA0Q0IyNjdCQzgzNkU2MTE5MzNDODg4NzUwRkZC
        N0JEIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjAzNDRCRTNFM0Y2NzExRTY4RTcyRjRCQTlENDY0
        NzQ3IiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjAzNDRCRTNEM0Y2NzExRTY4RTcyRjRCQTlENDY0
        NzQ3IiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzYgKFdpbmRvd3MpIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MDRDQjI2N0JDODM2RTYxMTkzM0M4
        ODg3NTBGRkI3QkQiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MDRDQjI2N0JDODM2RTYxMTkzM0M4
        ODg3NTBGRkI3QkQiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/
        eHBhY2tldCBlbmQ9InIiPz7V1k7YAAACnklEQVRIS+1WTUsyYRSdtX9TJEWwDw1DzK/cmKAkfZCDmZKk
        WVKK+FFqpWVludA2WpC4t0X+gPvOeWCkcUZ5I9u5ODgO9znnPufeI3Lv7++qXq/Hf3x8fAnP1O12Z4pO
        p0Ovr69fT09P/PX1tYoTXgbf3t6o3W7Ty8sLNRqNqbi8vKRisUj39/cgUqwZx+PjIwlilEwmea7Vag2b
        zSbd3t5SqVSiq6uriTg+Pqbt7W1yOBzk9XqpUChQrVZTrP2OcrlM5+fn5Pf7h9zz8zPrdpqY0BmFQiEc
        IKvVSlqtlnQ6He3u7lI6naZcLkeVSkXxrIhEIkFOp5M4wduJXZ6entLBwQFtbW2xWxkMBlKr1RKYTCba
        2dlhN8jn88w6JS64s76+rix4dnZG4XB4JLS4uCgR2djYILvdLnm3urpKe3t7I+GbmxsJJwThjkRQFAoE
        Auz6S0tLElKbzUaxWIwymQz79Pl8TOh7jdlspv39fSaMGWM3FAWPjo7YjVwuFy0vL0tILBYLRaNRNids
        Mkiy2SybCxrEAhmNRtkZzB2iWEqZIMTGZ7S2tkaHh4dsoSBUrVaZCwBsq9frbGlAhllvbm7SysqKhMPt
        dhPyLRNEl2IRbAIBrMAWQ0i0ZVIsRGHcyuPxSOY+GAzkgiDCqgeDQWYdhESyn8Ti4uKCkfM8z2YM1z4/
        P+WC8XicieH73d0dO/ybWKRSKXYeQv1+Xy6ILvGzhedZxQKcaACcMkF0NY/FPBaoncdiJIiu5rEQt/U7
        /jQW0/DfsXh4eGAWTYvFT6AUCwhGIhHmGCds0RCFWILxWPwGYizAi/+9cFCv1w+5k5OTILrBZmKtUYAt
        mwWQT3DjB0Oj0cBenhNupRL+vvELCwtD0fM/ALh5tVqt+gf2nbuk5yjb+QAAAABJRU5ErkJggg==
</value>
  </data>
</root>